//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HMI.Reporting.DataSets.Logging {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("HistoricalLoggingDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class HistoricalLoggingDataSet : global::System.Data.DataSet {
        
        private HistoricalLoggingEntriesDataTable tableHistoricalLoggingEntries;
        
        private LoggingEntryParametersDataTable tableLoggingEntryParameters;
        
        private LoggingEntryNotesDataTable tableLoggingEntryNotes;
        
        private Joined_EntriesAndNotesDataTable tableJoined_EntriesAndNotes;
        
        private global::System.Data.DataRelation relationHistoricalLoggingEntrys_LoggingEntryParameters;
        
        private global::System.Data.DataRelation relationHistoricalLoggingEntrys_LoggingEntryNotes;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public HistoricalLoggingDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected HistoricalLoggingDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HistoricalLoggingEntries"] != null)) {
                    base.Tables.Add(new HistoricalLoggingEntriesDataTable(ds.Tables["HistoricalLoggingEntries"]));
                }
                if ((ds.Tables["LoggingEntryParameters"] != null)) {
                    base.Tables.Add(new LoggingEntryParametersDataTable(ds.Tables["LoggingEntryParameters"]));
                }
                if ((ds.Tables["LoggingEntryNotes"] != null)) {
                    base.Tables.Add(new LoggingEntryNotesDataTable(ds.Tables["LoggingEntryNotes"]));
                }
                if ((ds.Tables["Joined_EntriesAndNotes"] != null)) {
                    base.Tables.Add(new Joined_EntriesAndNotesDataTable(ds.Tables["Joined_EntriesAndNotes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistoricalLoggingEntriesDataTable HistoricalLoggingEntries {
            get {
                return this.tableHistoricalLoggingEntries;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LoggingEntryParametersDataTable LoggingEntryParameters {
            get {
                return this.tableLoggingEntryParameters;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LoggingEntryNotesDataTable LoggingEntryNotes {
            get {
                return this.tableLoggingEntryNotes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Joined_EntriesAndNotesDataTable Joined_EntriesAndNotes {
            get {
                return this.tableJoined_EntriesAndNotes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            HistoricalLoggingDataSet cln = ((HistoricalLoggingDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HistoricalLoggingEntries"] != null)) {
                    base.Tables.Add(new HistoricalLoggingEntriesDataTable(ds.Tables["HistoricalLoggingEntries"]));
                }
                if ((ds.Tables["LoggingEntryParameters"] != null)) {
                    base.Tables.Add(new LoggingEntryParametersDataTable(ds.Tables["LoggingEntryParameters"]));
                }
                if ((ds.Tables["LoggingEntryNotes"] != null)) {
                    base.Tables.Add(new LoggingEntryNotesDataTable(ds.Tables["LoggingEntryNotes"]));
                }
                if ((ds.Tables["Joined_EntriesAndNotes"] != null)) {
                    base.Tables.Add(new Joined_EntriesAndNotesDataTable(ds.Tables["Joined_EntriesAndNotes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableHistoricalLoggingEntries = ((HistoricalLoggingEntriesDataTable)(base.Tables["HistoricalLoggingEntries"]));
            if ((initTable == true)) {
                if ((this.tableHistoricalLoggingEntries != null)) {
                    this.tableHistoricalLoggingEntries.InitVars();
                }
            }
            this.tableLoggingEntryParameters = ((LoggingEntryParametersDataTable)(base.Tables["LoggingEntryParameters"]));
            if ((initTable == true)) {
                if ((this.tableLoggingEntryParameters != null)) {
                    this.tableLoggingEntryParameters.InitVars();
                }
            }
            this.tableLoggingEntryNotes = ((LoggingEntryNotesDataTable)(base.Tables["LoggingEntryNotes"]));
            if ((initTable == true)) {
                if ((this.tableLoggingEntryNotes != null)) {
                    this.tableLoggingEntryNotes.InitVars();
                }
            }
            this.tableJoined_EntriesAndNotes = ((Joined_EntriesAndNotesDataTable)(base.Tables["Joined_EntriesAndNotes"]));
            if ((initTable == true)) {
                if ((this.tableJoined_EntriesAndNotes != null)) {
                    this.tableJoined_EntriesAndNotes.InitVars();
                }
            }
            this.relationHistoricalLoggingEntrys_LoggingEntryParameters = this.Relations["HistoricalLoggingEntrys_LoggingEntryParameters"];
            this.relationHistoricalLoggingEntrys_LoggingEntryNotes = this.Relations["HistoricalLoggingEntrys_LoggingEntryNotes"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "HistoricalLoggingDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/HistoricalLoggingData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHistoricalLoggingEntries = new HistoricalLoggingEntriesDataTable();
            base.Tables.Add(this.tableHistoricalLoggingEntries);
            this.tableLoggingEntryParameters = new LoggingEntryParametersDataTable();
            base.Tables.Add(this.tableLoggingEntryParameters);
            this.tableLoggingEntryNotes = new LoggingEntryNotesDataTable();
            base.Tables.Add(this.tableLoggingEntryNotes);
            this.tableJoined_EntriesAndNotes = new Joined_EntriesAndNotesDataTable();
            base.Tables.Add(this.tableJoined_EntriesAndNotes);
            this.relationHistoricalLoggingEntrys_LoggingEntryParameters = new global::System.Data.DataRelation("HistoricalLoggingEntrys_LoggingEntryParameters", new global::System.Data.DataColumn[] {
                        this.tableHistoricalLoggingEntries.FileNameColumn,
                        this.tableHistoricalLoggingEntries.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLoggingEntryParameters.Entry_FileNameColumn,
                        this.tableLoggingEntryParameters.Entry_IDColumn}, false);
            this.Relations.Add(this.relationHistoricalLoggingEntrys_LoggingEntryParameters);
            this.relationHistoricalLoggingEntrys_LoggingEntryNotes = new global::System.Data.DataRelation("HistoricalLoggingEntrys_LoggingEntryNotes", new global::System.Data.DataColumn[] {
                        this.tableHistoricalLoggingEntries.FileNameColumn,
                        this.tableHistoricalLoggingEntries.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLoggingEntryNotes.FileNameColumn,
                        this.tableLoggingEntryNotes.IDColumn}, false);
            this.Relations.Add(this.relationHistoricalLoggingEntrys_LoggingEntryNotes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeHistoricalLoggingEntries() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLoggingEntryParameters() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLoggingEntryNotes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeJoined_EntriesAndNotes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            HistoricalLoggingDataSet ds = new HistoricalLoggingDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void HistoricalLoggingEntriesRowChangeEventHandler(object sender, HistoricalLoggingEntriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LoggingEntryParametersRowChangeEventHandler(object sender, LoggingEntryParametersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LoggingEntryNotesRowChangeEventHandler(object sender, LoggingEntryNotesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Joined_EntriesAndNotesRowChangeEventHandler(object sender, Joined_EntriesAndNotesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistoricalLoggingEntriesDataTable : global::System.Data.TypedTableBase<HistoricalLoggingEntriesRow> {
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnEventName;
            
            private global::System.Data.DataColumn columnFileName;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnHasNotes;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLocalizedCategoryName;
            
            private global::System.Data.DataColumn columnLocalizedEventName;
            
            private global::System.Data.DataColumn columnLocalizedText;
            
            private global::System.Data.DataColumn columnMachine;
            
            private global::System.Data.DataColumn columnTimeStamp;
            
            private global::System.Data.DataColumn columnUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesDataTable() {
                this.TableName = "HistoricalLoggingEntries";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HistoricalLoggingEntriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected HistoricalLoggingEntriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EventNameColumn {
                get {
                    return this.columnEventName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FileNameColumn {
                get {
                    return this.columnFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasNotesColumn {
                get {
                    return this.columnHasNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LocalizedCategoryNameColumn {
                get {
                    return this.columnLocalizedCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LocalizedEventNameColumn {
                get {
                    return this.columnLocalizedEventName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LocalizedTextColumn {
                get {
                    return this.columnLocalizedText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MachineColumn {
                get {
                    return this.columnMachine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimeStampColumn {
                get {
                    return this.columnTimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserColumn {
                get {
                    return this.columnUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow this[int index] {
                get {
                    return ((HistoricalLoggingEntriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HistoricalLoggingEntriesRowChangeEventHandler HistoricalLoggingEntriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HistoricalLoggingEntriesRowChangeEventHandler HistoricalLoggingEntriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HistoricalLoggingEntriesRowChangeEventHandler HistoricalLoggingEntriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HistoricalLoggingEntriesRowChangeEventHandler HistoricalLoggingEntriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddHistoricalLoggingEntriesRow(HistoricalLoggingEntriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow AddHistoricalLoggingEntriesRow(string CategoryName, string EventName, string FileName, string FullName, bool HasNotes, int ID, string LocalizedCategoryName, string LocalizedEventName, string LocalizedText, string Machine, System.DateTime TimeStamp, string User) {
                HistoricalLoggingEntriesRow rowHistoricalLoggingEntriesRow = ((HistoricalLoggingEntriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CategoryName,
                        EventName,
                        FileName,
                        FullName,
                        HasNotes,
                        ID,
                        LocalizedCategoryName,
                        LocalizedEventName,
                        LocalizedText,
                        Machine,
                        TimeStamp,
                        User};
                rowHistoricalLoggingEntriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistoricalLoggingEntriesRow);
                return rowHistoricalLoggingEntriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow FindByFileNameID(string FileName, int ID) {
                return ((HistoricalLoggingEntriesRow)(this.Rows.Find(new object[] {
                            FileName,
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HistoricalLoggingEntriesDataTable cln = ((HistoricalLoggingEntriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistoricalLoggingEntriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnEventName = base.Columns["EventName"];
                this.columnFileName = base.Columns["FileName"];
                this.columnFullName = base.Columns["FullName"];
                this.columnHasNotes = base.Columns["HasNotes"];
                this.columnID = base.Columns["ID"];
                this.columnLocalizedCategoryName = base.Columns["LocalizedCategoryName"];
                this.columnLocalizedEventName = base.Columns["LocalizedEventName"];
                this.columnLocalizedText = base.Columns["LocalizedText"];
                this.columnMachine = base.Columns["Machine"];
                this.columnTimeStamp = base.Columns["TimeStamp"];
                this.columnUser = base.Columns["User"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnEventName = new global::System.Data.DataColumn("EventName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventName);
                this.columnFileName = new global::System.Data.DataColumn("FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnHasNotes = new global::System.Data.DataColumn("HasNotes", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasNotes);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLocalizedCategoryName = new global::System.Data.DataColumn("LocalizedCategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalizedCategoryName);
                this.columnLocalizedEventName = new global::System.Data.DataColumn("LocalizedEventName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalizedEventName);
                this.columnLocalizedText = new global::System.Data.DataColumn("LocalizedText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalizedText);
                this.columnMachine = new global::System.Data.DataColumn("Machine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachine);
                this.columnTimeStamp = new global::System.Data.DataColumn("TimeStamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeStamp);
                this.columnUser = new global::System.Data.DataColumn("User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFileName,
                                this.columnID}, true));
                this.columnFileName.AllowDBNull = false;
                this.columnID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow NewHistoricalLoggingEntriesRow() {
                return ((HistoricalLoggingEntriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistoricalLoggingEntriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HistoricalLoggingEntriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistoricalLoggingEntriesRowChanged != null)) {
                    this.HistoricalLoggingEntriesRowChanged(this, new HistoricalLoggingEntriesRowChangeEvent(((HistoricalLoggingEntriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistoricalLoggingEntriesRowChanging != null)) {
                    this.HistoricalLoggingEntriesRowChanging(this, new HistoricalLoggingEntriesRowChangeEvent(((HistoricalLoggingEntriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistoricalLoggingEntriesRowDeleted != null)) {
                    this.HistoricalLoggingEntriesRowDeleted(this, new HistoricalLoggingEntriesRowChangeEvent(((HistoricalLoggingEntriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistoricalLoggingEntriesRowDeleting != null)) {
                    this.HistoricalLoggingEntriesRowDeleting(this, new HistoricalLoggingEntriesRowChangeEvent(((HistoricalLoggingEntriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveHistoricalLoggingEntriesRow(HistoricalLoggingEntriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HistoricalLoggingDataSet ds = new HistoricalLoggingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistoricalLoggingEntriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LoggingEntryParametersDataTable : global::System.Data.TypedTableBase<LoggingEntryParametersRow> {
            
            private global::System.Data.DataColumn columnIndex;
            
            private global::System.Data.DataColumn columnLocalizedName;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnQuality;
            
            private global::System.Data.DataColumn columnTimestamp;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnQUAL_Data;
            
            private global::System.Data.DataColumn columnQUAL_IsBad;
            
            private global::System.Data.DataColumn columnQUAL_IsGoodOrUncretain;
            
            private global::System.Data.DataColumn columnQUAL_Limit;
            
            private global::System.Data.DataColumn columnQUAL_Value;
            
            private global::System.Data.DataColumn columnEntry_FileName;
            
            private global::System.Data.DataColumn columnEntry_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersDataTable() {
                this.TableName = "LoggingEntryParameters";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LoggingEntryParametersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LoggingEntryParametersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IndexColumn {
                get {
                    return this.columnIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LocalizedNameColumn {
                get {
                    return this.columnLocalizedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QualityColumn {
                get {
                    return this.columnQuality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimestampColumn {
                get {
                    return this.columnTimestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUAL_DataColumn {
                get {
                    return this.columnQUAL_Data;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUAL_IsBadColumn {
                get {
                    return this.columnQUAL_IsBad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUAL_IsGoodOrUncretainColumn {
                get {
                    return this.columnQUAL_IsGoodOrUncretain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUAL_LimitColumn {
                get {
                    return this.columnQUAL_Limit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUAL_ValueColumn {
                get {
                    return this.columnQUAL_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Entry_FileNameColumn {
                get {
                    return this.columnEntry_FileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Entry_IDColumn {
                get {
                    return this.columnEntry_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRow this[int index] {
                get {
                    return ((LoggingEntryParametersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryParametersRowChangeEventHandler LoggingEntryParametersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryParametersRowChangeEventHandler LoggingEntryParametersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryParametersRowChangeEventHandler LoggingEntryParametersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryParametersRowChangeEventHandler LoggingEntryParametersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLoggingEntryParametersRow(LoggingEntryParametersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRow AddLoggingEntryParametersRow(int Index, string LocalizedName, string Name, string Quality, System.DateTime Timestamp, string Type, string QUAL_Data, bool QUAL_IsBad, bool QUAL_IsGoodOrUncretain, string QUAL_Limit, int QUAL_Value, string Entry_FileName, int Entry_ID) {
                LoggingEntryParametersRow rowLoggingEntryParametersRow = ((LoggingEntryParametersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Index,
                        LocalizedName,
                        Name,
                        Quality,
                        Timestamp,
                        Type,
                        QUAL_Data,
                        QUAL_IsBad,
                        QUAL_IsGoodOrUncretain,
                        QUAL_Limit,
                        QUAL_Value,
                        Entry_FileName,
                        Entry_ID};
                rowLoggingEntryParametersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLoggingEntryParametersRow);
                return rowLoggingEntryParametersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRow FindByEntry_IDEntry_FileNameIndex(int Entry_ID, string Entry_FileName, int Index) {
                return ((LoggingEntryParametersRow)(this.Rows.Find(new object[] {
                            Entry_ID,
                            Entry_FileName,
                            Index})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LoggingEntryParametersDataTable cln = ((LoggingEntryParametersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LoggingEntryParametersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnIndex = base.Columns["Index"];
                this.columnLocalizedName = base.Columns["LocalizedName"];
                this.columnName = base.Columns["Name"];
                this.columnQuality = base.Columns["Quality"];
                this.columnTimestamp = base.Columns["Timestamp"];
                this.columnType = base.Columns["Type"];
                this.columnQUAL_Data = base.Columns["QUAL_Data"];
                this.columnQUAL_IsBad = base.Columns["QUAL_IsBad"];
                this.columnQUAL_IsGoodOrUncretain = base.Columns["QUAL_IsGoodOrUncretain"];
                this.columnQUAL_Limit = base.Columns["QUAL_Limit"];
                this.columnQUAL_Value = base.Columns["QUAL_Value"];
                this.columnEntry_FileName = base.Columns["Entry_FileName"];
                this.columnEntry_ID = base.Columns["Entry_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnIndex = new global::System.Data.DataColumn("Index", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex);
                this.columnLocalizedName = new global::System.Data.DataColumn("LocalizedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalizedName);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnQuality = new global::System.Data.DataColumn("Quality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuality);
                this.columnTimestamp = new global::System.Data.DataColumn("Timestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimestamp);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnQUAL_Data = new global::System.Data.DataColumn("QUAL_Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUAL_Data);
                this.columnQUAL_IsBad = new global::System.Data.DataColumn("QUAL_IsBad", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUAL_IsBad);
                this.columnQUAL_IsGoodOrUncretain = new global::System.Data.DataColumn("QUAL_IsGoodOrUncretain", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUAL_IsGoodOrUncretain);
                this.columnQUAL_Limit = new global::System.Data.DataColumn("QUAL_Limit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUAL_Limit);
                this.columnQUAL_Value = new global::System.Data.DataColumn("QUAL_Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUAL_Value);
                this.columnEntry_FileName = new global::System.Data.DataColumn("Entry_FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntry_FileName);
                this.columnEntry_ID = new global::System.Data.DataColumn("Entry_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntry_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEntry_ID,
                                this.columnEntry_FileName,
                                this.columnIndex}, true));
                this.columnIndex.AllowDBNull = false;
                this.columnEntry_FileName.AllowDBNull = false;
                this.columnEntry_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRow NewLoggingEntryParametersRow() {
                return ((LoggingEntryParametersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LoggingEntryParametersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LoggingEntryParametersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LoggingEntryParametersRowChanged != null)) {
                    this.LoggingEntryParametersRowChanged(this, new LoggingEntryParametersRowChangeEvent(((LoggingEntryParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LoggingEntryParametersRowChanging != null)) {
                    this.LoggingEntryParametersRowChanging(this, new LoggingEntryParametersRowChangeEvent(((LoggingEntryParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LoggingEntryParametersRowDeleted != null)) {
                    this.LoggingEntryParametersRowDeleted(this, new LoggingEntryParametersRowChangeEvent(((LoggingEntryParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LoggingEntryParametersRowDeleting != null)) {
                    this.LoggingEntryParametersRowDeleting(this, new LoggingEntryParametersRowChangeEvent(((LoggingEntryParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLoggingEntryParametersRow(LoggingEntryParametersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HistoricalLoggingDataSet ds = new HistoricalLoggingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LoggingEntryParametersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LoggingEntryNotesDataTable : global::System.Data.TypedTableBase<LoggingEntryNotesRow> {
            
            private global::System.Data.DataColumn columnFileName;
            
            private global::System.Data.DataColumn columnHistoricalEntryFullName;
            
            private global::System.Data.DataColumn columnHistoricalEntryID;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnText;
            
            private global::System.Data.DataColumn columnTimestamp;
            
            private global::System.Data.DataColumn columnUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesDataTable() {
                this.TableName = "LoggingEntryNotes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LoggingEntryNotesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LoggingEntryNotesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FileNameColumn {
                get {
                    return this.columnFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HistoricalEntryFullNameColumn {
                get {
                    return this.columnHistoricalEntryFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HistoricalEntryIDColumn {
                get {
                    return this.columnHistoricalEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TextColumn {
                get {
                    return this.columnText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimestampColumn {
                get {
                    return this.columnTimestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserColumn {
                get {
                    return this.columnUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRow this[int index] {
                get {
                    return ((LoggingEntryNotesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryNotesRowChangeEventHandler LoggingEntryNotesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryNotesRowChangeEventHandler LoggingEntryNotesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryNotesRowChangeEventHandler LoggingEntryNotesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LoggingEntryNotesRowChangeEventHandler LoggingEntryNotesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLoggingEntryNotesRow(LoggingEntryNotesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRow AddLoggingEntryNotesRow(string FileName, string HistoricalEntryFullName, int HistoricalEntryID, int ID, string Text, System.DateTime Timestamp, string User) {
                LoggingEntryNotesRow rowLoggingEntryNotesRow = ((LoggingEntryNotesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FileName,
                        HistoricalEntryFullName,
                        HistoricalEntryID,
                        ID,
                        Text,
                        Timestamp,
                        User};
                rowLoggingEntryNotesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLoggingEntryNotesRow);
                return rowLoggingEntryNotesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRow FindByIDHistoricalEntryIDFileName(int ID, int HistoricalEntryID, string FileName) {
                return ((LoggingEntryNotesRow)(this.Rows.Find(new object[] {
                            ID,
                            HistoricalEntryID,
                            FileName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LoggingEntryNotesDataTable cln = ((LoggingEntryNotesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LoggingEntryNotesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFileName = base.Columns["FileName"];
                this.columnHistoricalEntryFullName = base.Columns["HistoricalEntryFullName"];
                this.columnHistoricalEntryID = base.Columns["HistoricalEntryID"];
                this.columnID = base.Columns["ID"];
                this.columnText = base.Columns["Text"];
                this.columnTimestamp = base.Columns["Timestamp"];
                this.columnUser = base.Columns["User"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFileName = new global::System.Data.DataColumn("FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnHistoricalEntryFullName = new global::System.Data.DataColumn("HistoricalEntryFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoricalEntryFullName);
                this.columnHistoricalEntryID = new global::System.Data.DataColumn("HistoricalEntryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoricalEntryID);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnText = new global::System.Data.DataColumn("Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText);
                this.columnTimestamp = new global::System.Data.DataColumn("Timestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimestamp);
                this.columnUser = new global::System.Data.DataColumn("User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnHistoricalEntryID,
                                this.columnFileName}, true));
                this.columnFileName.AllowDBNull = false;
                this.columnHistoricalEntryID.AllowDBNull = false;
                this.columnID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRow NewLoggingEntryNotesRow() {
                return ((LoggingEntryNotesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LoggingEntryNotesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LoggingEntryNotesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LoggingEntryNotesRowChanged != null)) {
                    this.LoggingEntryNotesRowChanged(this, new LoggingEntryNotesRowChangeEvent(((LoggingEntryNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LoggingEntryNotesRowChanging != null)) {
                    this.LoggingEntryNotesRowChanging(this, new LoggingEntryNotesRowChangeEvent(((LoggingEntryNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LoggingEntryNotesRowDeleted != null)) {
                    this.LoggingEntryNotesRowDeleted(this, new LoggingEntryNotesRowChangeEvent(((LoggingEntryNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LoggingEntryNotesRowDeleting != null)) {
                    this.LoggingEntryNotesRowDeleting(this, new LoggingEntryNotesRowChangeEvent(((LoggingEntryNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLoggingEntryNotesRow(LoggingEntryNotesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HistoricalLoggingDataSet ds = new HistoricalLoggingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LoggingEntryNotesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Joined_EntriesAndNotesDataTable : global::System.Data.TypedTableBase<Joined_EntriesAndNotesRow> {
            
            private global::System.Data.DataColumn columnE_CategoryName;
            
            private global::System.Data.DataColumn columnE_EventName;
            
            private global::System.Data.DataColumn columnE_FileName;
            
            private global::System.Data.DataColumn columnE_FullName;
            
            private global::System.Data.DataColumn columnE_HasNotes;
            
            private global::System.Data.DataColumn columnE_ID;
            
            private global::System.Data.DataColumn columnE_LocalizedCategoryName;
            
            private global::System.Data.DataColumn columnE_LocalizedEventName;
            
            private global::System.Data.DataColumn columnE_LocalizedText;
            
            private global::System.Data.DataColumn columnE_Machine;
            
            private global::System.Data.DataColumn columnE_TimeStamp;
            
            private global::System.Data.DataColumn columnE_User;
            
            private global::System.Data.DataColumn columnN_FileName;
            
            private global::System.Data.DataColumn columnN_HistoricalEntryFullName;
            
            private global::System.Data.DataColumn columnN_HistoricalEntryID;
            
            private global::System.Data.DataColumn columnN_ID;
            
            private global::System.Data.DataColumn columnN_Text;
            
            private global::System.Data.DataColumn columnN_Timestamp;
            
            private global::System.Data.DataColumn columnN_User;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesDataTable() {
                this.TableName = "Joined_EntriesAndNotes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Joined_EntriesAndNotesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Joined_EntriesAndNotesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_CategoryNameColumn {
                get {
                    return this.columnE_CategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_EventNameColumn {
                get {
                    return this.columnE_EventName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_FileNameColumn {
                get {
                    return this.columnE_FileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_FullNameColumn {
                get {
                    return this.columnE_FullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_HasNotesColumn {
                get {
                    return this.columnE_HasNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_IDColumn {
                get {
                    return this.columnE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_LocalizedCategoryNameColumn {
                get {
                    return this.columnE_LocalizedCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_LocalizedEventNameColumn {
                get {
                    return this.columnE_LocalizedEventName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_LocalizedTextColumn {
                get {
                    return this.columnE_LocalizedText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_MachineColumn {
                get {
                    return this.columnE_Machine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_TimeStampColumn {
                get {
                    return this.columnE_TimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_UserColumn {
                get {
                    return this.columnE_User;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_FileNameColumn {
                get {
                    return this.columnN_FileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_HistoricalEntryFullNameColumn {
                get {
                    return this.columnN_HistoricalEntryFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_HistoricalEntryIDColumn {
                get {
                    return this.columnN_HistoricalEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_IDColumn {
                get {
                    return this.columnN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_TextColumn {
                get {
                    return this.columnN_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_TimestampColumn {
                get {
                    return this.columnN_Timestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn N_UserColumn {
                get {
                    return this.columnN_User;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesRow this[int index] {
                get {
                    return ((Joined_EntriesAndNotesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Joined_EntriesAndNotesRowChangeEventHandler Joined_EntriesAndNotesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Joined_EntriesAndNotesRowChangeEventHandler Joined_EntriesAndNotesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Joined_EntriesAndNotesRowChangeEventHandler Joined_EntriesAndNotesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Joined_EntriesAndNotesRowChangeEventHandler Joined_EntriesAndNotesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddJoined_EntriesAndNotesRow(Joined_EntriesAndNotesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesRow AddJoined_EntriesAndNotesRow(
                        string E_CategoryName, 
                        string E_EventName, 
                        string E_FileName, 
                        string E_FullName, 
                        bool E_HasNotes, 
                        int E_ID, 
                        string E_LocalizedCategoryName, 
                        string E_LocalizedEventName, 
                        string E_LocalizedText, 
                        string E_Machine, 
                        System.DateTime E_TimeStamp, 
                        string E_User, 
                        string N_FileName, 
                        string N_HistoricalEntryFullName, 
                        int N_HistoricalEntryID, 
                        int N_ID, 
                        string N_Text, 
                        System.DateTime N_Timestamp, 
                        string N_User) {
                Joined_EntriesAndNotesRow rowJoined_EntriesAndNotesRow = ((Joined_EntriesAndNotesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        E_CategoryName,
                        E_EventName,
                        E_FileName,
                        E_FullName,
                        E_HasNotes,
                        E_ID,
                        E_LocalizedCategoryName,
                        E_LocalizedEventName,
                        E_LocalizedText,
                        E_Machine,
                        E_TimeStamp,
                        E_User,
                        N_FileName,
                        N_HistoricalEntryFullName,
                        N_HistoricalEntryID,
                        N_ID,
                        N_Text,
                        N_Timestamp,
                        N_User};
                rowJoined_EntriesAndNotesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJoined_EntriesAndNotesRow);
                return rowJoined_EntriesAndNotesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesRow FindByN_IDE_IDE_FileName(int N_ID, int E_ID, string E_FileName) {
                return ((Joined_EntriesAndNotesRow)(this.Rows.Find(new object[] {
                            N_ID,
                            E_ID,
                            E_FileName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Joined_EntriesAndNotesDataTable cln = ((Joined_EntriesAndNotesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Joined_EntriesAndNotesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnE_CategoryName = base.Columns["E_CategoryName"];
                this.columnE_EventName = base.Columns["E_EventName"];
                this.columnE_FileName = base.Columns["E_FileName"];
                this.columnE_FullName = base.Columns["E_FullName"];
                this.columnE_HasNotes = base.Columns["E_HasNotes"];
                this.columnE_ID = base.Columns["E_ID"];
                this.columnE_LocalizedCategoryName = base.Columns["E_LocalizedCategoryName"];
                this.columnE_LocalizedEventName = base.Columns["E_LocalizedEventName"];
                this.columnE_LocalizedText = base.Columns["E_LocalizedText"];
                this.columnE_Machine = base.Columns["E_Machine"];
                this.columnE_TimeStamp = base.Columns["E_TimeStamp"];
                this.columnE_User = base.Columns["E_User"];
                this.columnN_FileName = base.Columns["N_FileName"];
                this.columnN_HistoricalEntryFullName = base.Columns["N_HistoricalEntryFullName"];
                this.columnN_HistoricalEntryID = base.Columns["N_HistoricalEntryID"];
                this.columnN_ID = base.Columns["N_ID"];
                this.columnN_Text = base.Columns["N_Text"];
                this.columnN_Timestamp = base.Columns["N_Timestamp"];
                this.columnN_User = base.Columns["N_User"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnE_CategoryName = new global::System.Data.DataColumn("E_CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CategoryName);
                this.columnE_EventName = new global::System.Data.DataColumn("E_EventName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_EventName);
                this.columnE_FileName = new global::System.Data.DataColumn("E_FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FileName);
                this.columnE_FullName = new global::System.Data.DataColumn("E_FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FullName);
                this.columnE_HasNotes = new global::System.Data.DataColumn("E_HasNotes", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_HasNotes);
                this.columnE_ID = new global::System.Data.DataColumn("E_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_ID);
                this.columnE_LocalizedCategoryName = new global::System.Data.DataColumn("E_LocalizedCategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_LocalizedCategoryName);
                this.columnE_LocalizedEventName = new global::System.Data.DataColumn("E_LocalizedEventName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_LocalizedEventName);
                this.columnE_LocalizedText = new global::System.Data.DataColumn("E_LocalizedText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_LocalizedText);
                this.columnE_Machine = new global::System.Data.DataColumn("E_Machine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_Machine);
                this.columnE_TimeStamp = new global::System.Data.DataColumn("E_TimeStamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_TimeStamp);
                this.columnE_User = new global::System.Data.DataColumn("E_User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_User);
                this.columnN_FileName = new global::System.Data.DataColumn("N_FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_FileName);
                this.columnN_HistoricalEntryFullName = new global::System.Data.DataColumn("N_HistoricalEntryFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_HistoricalEntryFullName);
                this.columnN_HistoricalEntryID = new global::System.Data.DataColumn("N_HistoricalEntryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_HistoricalEntryID);
                this.columnN_ID = new global::System.Data.DataColumn("N_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_ID);
                this.columnN_Text = new global::System.Data.DataColumn("N_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_Text);
                this.columnN_Timestamp = new global::System.Data.DataColumn("N_Timestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_Timestamp);
                this.columnN_User = new global::System.Data.DataColumn("N_User", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_User);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnN_ID,
                                this.columnE_ID,
                                this.columnE_FileName}, true));
                this.columnE_CategoryName.Caption = "CategoryName";
                this.columnE_EventName.Caption = "EventName";
                this.columnE_FileName.AllowDBNull = false;
                this.columnE_FileName.Caption = "FileName";
                this.columnE_FullName.Caption = "FullName";
                this.columnE_HasNotes.Caption = "HasNotes";
                this.columnE_ID.AllowDBNull = false;
                this.columnE_ID.Caption = "ID";
                this.columnE_LocalizedCategoryName.Caption = "LocalizedCategoryName";
                this.columnE_LocalizedEventName.Caption = "LocalizedEventName";
                this.columnE_LocalizedText.Caption = "LocalizedText";
                this.columnE_Machine.Caption = "Machine";
                this.columnE_TimeStamp.Caption = "TimeStamp";
                this.columnE_User.Caption = "User";
                this.columnN_FileName.AllowDBNull = false;
                this.columnN_FileName.Caption = "FileName";
                this.columnN_HistoricalEntryFullName.Caption = "HistoricalEntryFullName";
                this.columnN_HistoricalEntryID.AllowDBNull = false;
                this.columnN_HistoricalEntryID.Caption = "HistoricalEntryID";
                this.columnN_ID.AllowDBNull = false;
                this.columnN_ID.Caption = "ID";
                this.columnN_Text.Caption = "Text";
                this.columnN_Timestamp.Caption = "Timestamp";
                this.columnN_User.Caption = "User";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesRow NewJoined_EntriesAndNotesRow() {
                return ((Joined_EntriesAndNotesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Joined_EntriesAndNotesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Joined_EntriesAndNotesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Joined_EntriesAndNotesRowChanged != null)) {
                    this.Joined_EntriesAndNotesRowChanged(this, new Joined_EntriesAndNotesRowChangeEvent(((Joined_EntriesAndNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Joined_EntriesAndNotesRowChanging != null)) {
                    this.Joined_EntriesAndNotesRowChanging(this, new Joined_EntriesAndNotesRowChangeEvent(((Joined_EntriesAndNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Joined_EntriesAndNotesRowDeleted != null)) {
                    this.Joined_EntriesAndNotesRowDeleted(this, new Joined_EntriesAndNotesRowChangeEvent(((Joined_EntriesAndNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Joined_EntriesAndNotesRowDeleting != null)) {
                    this.Joined_EntriesAndNotesRowDeleting(this, new Joined_EntriesAndNotesRowChangeEvent(((Joined_EntriesAndNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveJoined_EntriesAndNotesRow(Joined_EntriesAndNotesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HistoricalLoggingDataSet ds = new HistoricalLoggingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Joined_EntriesAndNotesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HistoricalLoggingEntriesRow : global::System.Data.DataRow {
            
            private HistoricalLoggingEntriesDataTable tableHistoricalLoggingEntries;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HistoricalLoggingEntriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistoricalLoggingEntries = ((HistoricalLoggingEntriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'HistoricalLoggingEntries\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EventName {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.EventNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventName\' in table \'HistoricalLoggingEntries\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.EventNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FileName {
                get {
                    return ((string)(this[this.tableHistoricalLoggingEntries.FileNameColumn]));
                }
                set {
                    this[this.tableHistoricalLoggingEntries.FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'HistoricalLoggingEntries\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasNotes {
                get {
                    try {
                        return ((bool)(this[this.tableHistoricalLoggingEntries.HasNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasNotes\' in table \'HistoricalLoggingEntries\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.HasNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableHistoricalLoggingEntries.IDColumn]));
                }
                set {
                    this[this.tableHistoricalLoggingEntries.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LocalizedCategoryName {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.LocalizedCategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalizedCategoryName\' in table \'HistoricalLoggingEntries\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.LocalizedCategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LocalizedEventName {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.LocalizedEventNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalizedEventName\' in table \'HistoricalLoggingEntries\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.LocalizedEventNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LocalizedText {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.LocalizedTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalizedText\' in table \'HistoricalLoggingEntries\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.LocalizedTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Machine {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.MachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Machine\' in table \'HistoricalLoggingEntries\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.MachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime TimeStamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHistoricalLoggingEntries.TimeStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeStamp\' in table \'HistoricalLoggingEntries\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.TimeStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string User {
                get {
                    try {
                        return ((string)(this[this.tableHistoricalLoggingEntries.UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User\' in table \'HistoricalLoggingEntries\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHistoricalLoggingEntries.UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCategoryNameNull() {
                this[this.tableHistoricalLoggingEntries.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEventNameNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.EventNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEventNameNull() {
                this[this.tableHistoricalLoggingEntries.EventNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableHistoricalLoggingEntries.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHasNotesNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.HasNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHasNotesNull() {
                this[this.tableHistoricalLoggingEntries.HasNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLocalizedCategoryNameNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.LocalizedCategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLocalizedCategoryNameNull() {
                this[this.tableHistoricalLoggingEntries.LocalizedCategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLocalizedEventNameNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.LocalizedEventNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLocalizedEventNameNull() {
                this[this.tableHistoricalLoggingEntries.LocalizedEventNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLocalizedTextNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.LocalizedTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLocalizedTextNull() {
                this[this.tableHistoricalLoggingEntries.LocalizedTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMachineNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.MachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMachineNull() {
                this[this.tableHistoricalLoggingEntries.MachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTimeStampNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.TimeStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTimeStampNull() {
                this[this.tableHistoricalLoggingEntries.TimeStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserNull() {
                return this.IsNull(this.tableHistoricalLoggingEntries.UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserNull() {
                this[this.tableHistoricalLoggingEntries.UserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRow[] GetLoggingEntryParametersRows() {
                if ((this.Table.ChildRelations["HistoricalLoggingEntrys_LoggingEntryParameters"] == null)) {
                    return new LoggingEntryParametersRow[0];
                }
                else {
                    return ((LoggingEntryParametersRow[])(base.GetChildRows(this.Table.ChildRelations["HistoricalLoggingEntrys_LoggingEntryParameters"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRow[] GetLoggingEntryNotesRows() {
                if ((this.Table.ChildRelations["HistoricalLoggingEntrys_LoggingEntryNotes"] == null)) {
                    return new LoggingEntryNotesRow[0];
                }
                else {
                    return ((LoggingEntryNotesRow[])(base.GetChildRows(this.Table.ChildRelations["HistoricalLoggingEntrys_LoggingEntryNotes"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LoggingEntryParametersRow : global::System.Data.DataRow {
            
            private LoggingEntryParametersDataTable tableLoggingEntryParameters;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LoggingEntryParametersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLoggingEntryParameters = ((LoggingEntryParametersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Index {
                get {
                    return ((int)(this[this.tableLoggingEntryParameters.IndexColumn]));
                }
                set {
                    this[this.tableLoggingEntryParameters.IndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LocalizedName {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryParameters.LocalizedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalizedName\' in table \'LoggingEntryParameters\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.LocalizedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryParameters.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Quality {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryParameters.QualityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quality\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.QualityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Timestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLoggingEntryParameters.TimestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Timestamp\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.TimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryParameters.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string QUAL_Data {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryParameters.QUAL_DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUAL_Data\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.QUAL_DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool QUAL_IsBad {
                get {
                    try {
                        return ((bool)(this[this.tableLoggingEntryParameters.QUAL_IsBadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUAL_IsBad\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.QUAL_IsBadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool QUAL_IsGoodOrUncretain {
                get {
                    try {
                        return ((bool)(this[this.tableLoggingEntryParameters.QUAL_IsGoodOrUncretainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUAL_IsGoodOrUncretain\' in table \'LoggingEntryParameters\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.QUAL_IsGoodOrUncretainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string QUAL_Limit {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryParameters.QUAL_LimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUAL_Limit\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.QUAL_LimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUAL_Value {
                get {
                    try {
                        return ((int)(this[this.tableLoggingEntryParameters.QUAL_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUAL_Value\' in table \'LoggingEntryParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryParameters.QUAL_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Entry_FileName {
                get {
                    return ((string)(this[this.tableLoggingEntryParameters.Entry_FileNameColumn]));
                }
                set {
                    this[this.tableLoggingEntryParameters.Entry_FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Entry_ID {
                get {
                    return ((int)(this[this.tableLoggingEntryParameters.Entry_IDColumn]));
                }
                set {
                    this[this.tableLoggingEntryParameters.Entry_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow HistoricalLoggingEntrysRowParent {
                get {
                    return ((HistoricalLoggingEntriesRow)(this.GetParentRow(this.Table.ParentRelations["HistoricalLoggingEntrys_LoggingEntryParameters"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HistoricalLoggingEntrys_LoggingEntryParameters"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLocalizedNameNull() {
                return this.IsNull(this.tableLoggingEntryParameters.LocalizedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLocalizedNameNull() {
                this[this.tableLoggingEntryParameters.LocalizedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableLoggingEntryParameters.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameNull() {
                this[this.tableLoggingEntryParameters.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQualityNull() {
                return this.IsNull(this.tableLoggingEntryParameters.QualityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQualityNull() {
                this[this.tableLoggingEntryParameters.QualityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTimestampNull() {
                return this.IsNull(this.tableLoggingEntryParameters.TimestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTimestampNull() {
                this[this.tableLoggingEntryParameters.TimestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLoggingEntryParameters.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTypeNull() {
                this[this.tableLoggingEntryParameters.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUAL_DataNull() {
                return this.IsNull(this.tableLoggingEntryParameters.QUAL_DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUAL_DataNull() {
                this[this.tableLoggingEntryParameters.QUAL_DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUAL_IsBadNull() {
                return this.IsNull(this.tableLoggingEntryParameters.QUAL_IsBadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUAL_IsBadNull() {
                this[this.tableLoggingEntryParameters.QUAL_IsBadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUAL_IsGoodOrUncretainNull() {
                return this.IsNull(this.tableLoggingEntryParameters.QUAL_IsGoodOrUncretainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUAL_IsGoodOrUncretainNull() {
                this[this.tableLoggingEntryParameters.QUAL_IsGoodOrUncretainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUAL_LimitNull() {
                return this.IsNull(this.tableLoggingEntryParameters.QUAL_LimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUAL_LimitNull() {
                this[this.tableLoggingEntryParameters.QUAL_LimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUAL_ValueNull() {
                return this.IsNull(this.tableLoggingEntryParameters.QUAL_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUAL_ValueNull() {
                this[this.tableLoggingEntryParameters.QUAL_ValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LoggingEntryNotesRow : global::System.Data.DataRow {
            
            private LoggingEntryNotesDataTable tableLoggingEntryNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LoggingEntryNotesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLoggingEntryNotes = ((LoggingEntryNotesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FileName {
                get {
                    return ((string)(this[this.tableLoggingEntryNotes.FileNameColumn]));
                }
                set {
                    this[this.tableLoggingEntryNotes.FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HistoricalEntryFullName {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryNotes.HistoricalEntryFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoricalEntryFullName\' in table \'LoggingEntryNotes\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryNotes.HistoricalEntryFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int HistoricalEntryID {
                get {
                    return ((int)(this[this.tableLoggingEntryNotes.HistoricalEntryIDColumn]));
                }
                set {
                    this[this.tableLoggingEntryNotes.HistoricalEntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableLoggingEntryNotes.IDColumn]));
                }
                set {
                    this[this.tableLoggingEntryNotes.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Text {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryNotes.TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Text\' in table \'LoggingEntryNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryNotes.TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Timestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLoggingEntryNotes.TimestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Timestamp\' in table \'LoggingEntryNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryNotes.TimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string User {
                get {
                    try {
                        return ((string)(this[this.tableLoggingEntryNotes.UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User\' in table \'LoggingEntryNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoggingEntryNotes.UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow HistoricalLoggingEntrysRowParent {
                get {
                    return ((HistoricalLoggingEntriesRow)(this.GetParentRow(this.Table.ParentRelations["HistoricalLoggingEntrys_LoggingEntryNotes"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HistoricalLoggingEntrys_LoggingEntryNotes"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHistoricalEntryFullNameNull() {
                return this.IsNull(this.tableLoggingEntryNotes.HistoricalEntryFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHistoricalEntryFullNameNull() {
                this[this.tableLoggingEntryNotes.HistoricalEntryFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTextNull() {
                return this.IsNull(this.tableLoggingEntryNotes.TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTextNull() {
                this[this.tableLoggingEntryNotes.TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTimestampNull() {
                return this.IsNull(this.tableLoggingEntryNotes.TimestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTimestampNull() {
                this[this.tableLoggingEntryNotes.TimestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserNull() {
                return this.IsNull(this.tableLoggingEntryNotes.UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserNull() {
                this[this.tableLoggingEntryNotes.UserColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Joined_EntriesAndNotesRow : global::System.Data.DataRow {
            
            private Joined_EntriesAndNotesDataTable tableJoined_EntriesAndNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Joined_EntriesAndNotesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJoined_EntriesAndNotes = ((Joined_EntriesAndNotesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_CategoryName {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_CategoryName\' in table \'Joined_EntriesAndNotes\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_EventName {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_EventNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_EventName\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_EventNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_FileName {
                get {
                    return ((string)(this[this.tableJoined_EntriesAndNotes.E_FileNameColumn]));
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_FullName {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FullName\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool E_HasNotes {
                get {
                    try {
                        return ((bool)(this[this.tableJoined_EntriesAndNotes.E_HasNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_HasNotes\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_HasNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int E_ID {
                get {
                    return ((int)(this[this.tableJoined_EntriesAndNotes.E_IDColumn]));
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_LocalizedCategoryName {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_LocalizedCategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_LocalizedCategoryName\' in table \'Joined_EntriesAndNotes\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_LocalizedCategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_LocalizedEventName {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_LocalizedEventNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_LocalizedEventName\' in table \'Joined_EntriesAndNotes\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_LocalizedEventNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_LocalizedText {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_LocalizedTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_LocalizedText\' in table \'Joined_EntriesAndNotes\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_LocalizedTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_Machine {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_MachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_Machine\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_MachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime E_TimeStamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableJoined_EntriesAndNotes.E_TimeStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_TimeStamp\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_TimeStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string E_User {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.E_UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_User\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.E_UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string N_FileName {
                get {
                    return ((string)(this[this.tableJoined_EntriesAndNotes.N_FileNameColumn]));
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string N_HistoricalEntryFullName {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.N_HistoricalEntryFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N_HistoricalEntryFullName\' in table \'Joined_EntriesAndNotes" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_HistoricalEntryFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int N_HistoricalEntryID {
                get {
                    return ((int)(this[this.tableJoined_EntriesAndNotes.N_HistoricalEntryIDColumn]));
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_HistoricalEntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int N_ID {
                get {
                    return ((int)(this[this.tableJoined_EntriesAndNotes.N_IDColumn]));
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string N_Text {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.N_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N_Text\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime N_Timestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableJoined_EntriesAndNotes.N_TimestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N_Timestamp\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_TimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string N_User {
                get {
                    try {
                        return ((string)(this[this.tableJoined_EntriesAndNotes.N_UserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N_User\' in table \'Joined_EntriesAndNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJoined_EntriesAndNotes.N_UserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_CategoryNameNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_CategoryNameNull() {
                this[this.tableJoined_EntriesAndNotes.E_CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_EventNameNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_EventNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_EventNameNull() {
                this[this.tableJoined_EntriesAndNotes.E_EventNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_FullNameNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_FullNameNull() {
                this[this.tableJoined_EntriesAndNotes.E_FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_HasNotesNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_HasNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_HasNotesNull() {
                this[this.tableJoined_EntriesAndNotes.E_HasNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_LocalizedCategoryNameNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_LocalizedCategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_LocalizedCategoryNameNull() {
                this[this.tableJoined_EntriesAndNotes.E_LocalizedCategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_LocalizedEventNameNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_LocalizedEventNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_LocalizedEventNameNull() {
                this[this.tableJoined_EntriesAndNotes.E_LocalizedEventNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_LocalizedTextNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_LocalizedTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_LocalizedTextNull() {
                this[this.tableJoined_EntriesAndNotes.E_LocalizedTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_MachineNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_MachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_MachineNull() {
                this[this.tableJoined_EntriesAndNotes.E_MachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_TimeStampNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_TimeStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_TimeStampNull() {
                this[this.tableJoined_EntriesAndNotes.E_TimeStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsE_UserNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.E_UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetE_UserNull() {
                this[this.tableJoined_EntriesAndNotes.E_UserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsN_HistoricalEntryFullNameNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.N_HistoricalEntryFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetN_HistoricalEntryFullNameNull() {
                this[this.tableJoined_EntriesAndNotes.N_HistoricalEntryFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsN_TextNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.N_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetN_TextNull() {
                this[this.tableJoined_EntriesAndNotes.N_TextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsN_TimestampNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.N_TimestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetN_TimestampNull() {
                this[this.tableJoined_EntriesAndNotes.N_TimestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsN_UserNull() {
                return this.IsNull(this.tableJoined_EntriesAndNotes.N_UserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetN_UserNull() {
                this[this.tableJoined_EntriesAndNotes.N_UserColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class HistoricalLoggingEntriesRowChangeEvent : global::System.EventArgs {
            
            private HistoricalLoggingEntriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRowChangeEvent(HistoricalLoggingEntriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HistoricalLoggingEntriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LoggingEntryParametersRowChangeEvent : global::System.EventArgs {
            
            private LoggingEntryParametersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRowChangeEvent(LoggingEntryParametersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryParametersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LoggingEntryNotesRowChangeEvent : global::System.EventArgs {
            
            private LoggingEntryNotesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRowChangeEvent(LoggingEntryNotesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LoggingEntryNotesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Joined_EntriesAndNotesRowChangeEvent : global::System.EventArgs {
            
            private Joined_EntriesAndNotesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesRowChangeEvent(Joined_EntriesAndNotesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Joined_EntriesAndNotesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591